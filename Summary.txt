1강

프로그래밍 : 컴퓨터에게 일을 하도록 명령어를 만드는것
컴파일 : 프로그램 언어를 컴퓨터가 알 수 있는 언어로 바꿔 주는 일
컴파일러 : 기계어로 번역해주는 프로그램 자바를 설치하면 자바 컴파일러도 설치 됨

자바를 쓰면 왜 좋을까?
 - 객체 지향 언어이기 때문에 유지보수가 쉽고 확장성이 좋다
 - 프로그램이 안정적이다
 - 풍부한 기능을 제공하는 오픈소스이다



2강 변수와 자료형 (1)

컴퓨터에서 데이터 표현하기
컴퓨터는 0과1로만 데이터를 저장함
bit(비트) : 컴퓨터가 표현하는 데이터의 최소 단위로 2진수 하나의
값을 저장할 수 있는 메모리의 크기
byte(바이트) : 1byte = 8bit

0과 1의 표현 - 2진수
컴퓨터는 0과 1로 자료를 표현한다.
따라서 숫자나 문자도 0과 1의 조합으로 표현된다.

10진수와 16진수
2진수로 표현하면 길이가 길어지므로 8진수나 16진수를 사용하기도 한다.

10진수, 16진수, 8진수
숫자 10을 10진수, 8진수, 16진수로 출력해보자 1)

음의 정수는 어떻게 표현할까?
정수의 가장 왼쪽에 존재하는 비트는 부호비트 입니다.
MBS (Most Significant Bit) 가장 중요한 비트라는 뜻
음수를 만드는 방법은 2의 보수를 취한다      2)



3강 변수와 자료형(2)

변수
사람의 나이는 해가 바뀌면 변한다.(age)
두 수를 이용하여 사칙 연산을 하면 그 결과 값은 연산자에 따라 달라진다.(result)
게임을 하면 게임 레벨이 점점 올라간다(level)
변수
프로그램에서 사용되는 자료를 저장하기 위한 공간
할당 받은 메모리의 주소 대신 부르는 이름
프로그램 실행 중에 값 변경 가능
사용되기 이전에 선언 되어야 한다.
variable 이라 함

변수의 선언과 초기화
int level;   //level 이라는 이름의 변수 선언
int level=0;   //level 변수 선언과 동시에 0으로 초기화

int level;
int = 10;
int 의 역할 : level 변수의 데이터 타입을 정의
int 의 의미 : level 정수이며 4바이트의 메모리 공간을 사용한다 3)

변수 선언 시 유의점

변수의 이름은 알파벳, 숫자, _, $, 로 구성된다 _

대소문자를 구분한다.
변수의 이름은 숫자로 시작할 수 없고, 키워드도 변수의 이름으로 사용할 수 없다.
이름 사이에 공백이 있을 수 없다.
 - 변수의 이름을 정할 때는 변수의 역할에 어울리는, 의미 있는 이름
 을 지어야 한다

변수가 저장되는 공산의 특성 - 자료형

          정수형    문자형    실수형    논리형
1바이트    byte       -        -      boolean
2바이트    short     char      -        -
4바이트    int        -       float     - 
8바이트    long       -      doubled    -   

정수 자료형

   자료형    바이트 크기
   byte        1
   short       2
   int         4
   long        8

byte 와 short

byte: 1바이트 단위의 자료형   
      동영상, 음악 파일등 실행 파일의 자료를 처리 할 때 사용하기
      좋은 자료형
short: 2바이트 단위의 자료형
       주로 c/c++ 언어와의 호환 시 사용


 - int

자바에서 사용하는 정수에 대한 기본 자료형
4바이트 단위의 자료 형
프로그램에서 사용하는 모든 숫자(리터럴)은 기본적으로 int(4바이트)
로 저장됨
32비트를 초과하는 숫자는 long 형으로 처리해야함

 - long

8바이트 자료형
가장 큰 정수 자료형
숫자의 뒤에 L 또는 l 을 써서 long 형임을 표시해야 함

 - char - 문자 자료형

컴퓨터에서는 문자도 내부적으로는 비트의 조합으로 표현
자바에서는 문자를 2 바이트로 처리
인코딩 - 각 문자에 따른 특정한 숫자 값(코드 값)을 부여
디코딩 - 숫자 값을 원래의 문자로 변환

 - float, double - 실수 자료형
 
부동 소수점 방식: 실수를 지수부와 가수부로 표현함
                무한의 실수를 표현하기 위한 방식
실수는 기본 적으로 long으로 처리 함
float 형으로 사용하는 경우 숫자에 f,F를 명시 함

 - boolean - 논리형
 
논리값 true(참), false(거짓) 을 표현ㅅ하는 자료형
boolean 으로 선언



4강

변수와 자료형 (3)

 - 상수

상수 : 변하지 않는 값 (cf 변수 : 변하는 값)
상수를 선언 : final 키워드 사용
final double PI = 3.14;
final int MAX_NUM = 100;

final로 선언된 상수는 다른 값을 대입 할 수 없음
PI = 3.15; // 에러남

프로그램 내에서 변경되지 말아야 하는 값을 상수로 선언해 두고 혹시
변경되는 경우 선언된 값만 수정      1)

 - 리터럴(literal)

리터럴 : 프로그램에서 사용하는 모든 숫자, 값, 논리 값
        예) 10, 3.14, 'A', true
        
리터럴에 해당되는 값은 특정 메모리 공간인 상수 풀(constant pool)
에 있음
필요한 경우 상수 풀에서 가져와서 사용
상수 풀에 저장 할 때 정수는 int로 실수는 double로 저장
따라서 long이나 float 값으로 저장해야 하는 경우 식별자(L,l,F,f)
를 명시해야 함

- 형 변환(type conversion)

자료형은 각각 사용하는 메모리 크기와 방식이 다름
서로 다른 자료형의 값이 대입되는 경우 형 변환이 일어 남
묵시적 형변환 : 작은 수 에서 큰 수로
              덜 정밀한 수에서 더 정밀한 수로 대입되는 경우

예) long num = 3; // int 값에서 long으로 자동 형 변환
                  // L,l 을 명시하지 않아도 됨
                  
명시적 형 변환 : 묵시적 형 변환의 반대의 경우
               변환 되는 자료 형을 명시해야 함 자료의 손실이 발생 할 수 있음
예) double dNum = 3.14;
   int num = (int)dNum; //자료형 명시  2)















































